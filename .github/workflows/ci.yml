name: CI

on:
  push:
    branches: [ "main" ]
    paths:
      - "maa-cli/**"
      - "maa-sys/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/ci.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "maa-cli/**"
      - "maa-sys/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/ci.yml"

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Rust
        run: |
          rustup component add clippy rustfmt
      - name: Lint (clippy)
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Lint (rustfmt)
        run: cargo fmt --all --check

  build:
    name: Build and test
    needs: lint
    runs-on: ${{ matrix.os }}
    env:
      CARGO_BUILD_TARGET: ${{ matrix.triple }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            triple: x86_64-unknown-linux-gnu
          # - os: ubuntu-latest
          #   triple: aarch64-unknown-linux-gnu
          - os: macos-latest
            triple: x86_64-apple-darwin
          # - os: macos-latest
          #   triple: aarch64-apple-darwin
          - os: windows-latest
            triple: x86_64-pc-windows-msvc
          # - os: windows-latest
          #   triple: aarch64-pc-windows-msvc
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Rust
        run: |
          rustup target add $CARGO_BUILD_TARGET
      - name: Build
        run: cargo build --workspace --locked
      - name: Install MaaCore
        shell: bash
        env:
          MAA_API_URL: https://github.com/MaaAssistantArknights/MaaRelease/raw/main/MaaAssistantArknights/api/version
        run: |
          cargo run install beta
          ls -l "$(cargo run dir library)"
          ls -l "$(cargo run dir resource)"
      - name: Test
        shell: bash
        run: |
          export MAA_CORE_DIR="$(cargo run dir library)"
          export DYLD_FALLBACK_LIBRARY_PATH="$MAA_CORE_DIR"
          cargo test --all-targets --all-features --locked
      - name: Try run
        shell: bash
        run: |
          export DYLD_FALLBACK_LIBRARY_PATH="$(cargo run dir library)"
          cargo run -- version
