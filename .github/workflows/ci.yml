name: CI

on:
  push:
    branches: [ "main" ]
    paths:
      - "maa-cli/**"
      - "maa-sys/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/ci.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "maa-cli/**"
      - "maa-sys/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/ci.yml"

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Rust
        run: |
          rustup component add clippy rustfmt
      - name: Lint (clippy)
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Lint (rustfmt)
        run: cargo fmt --all --check

  build:
    name: Build and test
    needs: lint
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          # - windows-latest
        arch:
          - x86_64
          - aarch64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Cross
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'aarch64'
        uses: taiki-e/install-action@v2
        with:
          tool: cross
      - name: Setup environment
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            rustup target add $CARGO_BUILD_TARGET
            CARGO_CMD=cargo
            CARGO_BUILD_TARGET="${{ matrix.arch }}-apple-darwin"
          else
            if [ "${{ matrix.arch }}" = "aarch64" ]; then
              CARGO_CMD=cross
            else
              CARGO_CMD=cargo
            fi
            CARGO_BUILD_TARGET="${{ matrix.arch }}-unknown-linux-gnu"
          fi
          echo "CARGO_CMD=$CARGO_CMD" >> $GITHUB_ENV
          echo "CARGO_BUILD_TARGET=$CARGO_BUILD_TARGET" >> $GITHUB_ENV
          echo "CARGO_TARGET_DIR=$PWD/target" >> $GITHUB_ENV
          echo "MAA_DATA_DIR=$PWD/target/maa-data" >> $GITHUB_ENV
          echo "MAA_CORE_DIR=$PWD/target/maa-data/lib" >> $GITHUB_ENV
      - name: Build (maa-cli)
        run: |
          $CARGO_CMD build --package maa-cli --locked
      # All following steps are not run for aarch64-apple-darwin
      # bacause cross doesn't support it.
      - name: Install MaaCore
        if: matrix.arch == 'x86_64' || matrix.os == 'ubuntu-latest'
        env:
          MAA_API_URL: https://github.com/MaaAssistantArknights/MaaRelease/raw/main/MaaAssistantArknights/api/version
        run: |
          $CARGO_CMD run --target $CARGO_BUILD_TARGET -- install beta
      - name: Show installation
        if: matrix.arch == 'x86_64' || matrix.os == 'ubuntu-latest'
        run: |
          tree -L 2 $MAA_DATA_DIR
      - name: Test (maa-cli)
        if: matrix.arch == 'x86_64' || matrix.os == 'ubuntu-latest'
        run: |
          $CARGO_CMD test --package maa-cli --locked
      - name: Try run
        if: matrix.arch == 'x86_64' || matrix.os == 'ubuntu-latest'
        run: |
          export DYLD_FALLBACK_LIBRARY_PATH="$MAA_CORE_DIR"
          $CARGO_CMD run --target $CARGO_BUILD_TARGET --locked -- version
      - name: Test (maa-sys, static)
        if: matrix.arch == 'x86_64' || matrix.os == 'ubuntu-latest'
        run: |
          $CARGO_CMD test --package maa-sys --locked
