name: CI

on:
  push:
    branches: [ "main" ]
    paths:
      - "maa-cli/**"
      - "maa-sys/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/ci.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "maa-cli/**"
      - "maa-sys/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/ci.yml"

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Rust
        run: |
          rustup component add clippy rustfmt
      - name: Lint (clippy)
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Lint (rustfmt)
        run: cargo fmt --all --check

  build:
    name: Build and test
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          # - windows-latest
        arch:
          - x86_64
          - aarch64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup target
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            CARGO_BUILD_TARGET="${{ matrix.arch }}-apple-darwin"
          else
            CARGO_BUILD_TARGET="${{ matrix.arch }}-unknown-linux-gnu"
          fi
          echo "CARGO_BUILD_TARGET=$CARGO_BUILD_TARGET" >> $GITHUB_ENV
      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ env.CARGO_BUILD_TARGET }}
      - name: Build (maa-cli)
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --bin maa --locked
          use-cross: ${{ matrix.arch != 'x86_64' }}
      - name: Install MaaCore
        uses: actions-rs/cargo@v1
        env:
          MAA_API_URL: https://github.com/MaaAssistantArknights/MaaRelease/raw/main/MaaAssistantArknights/api/version
        with:
          command: run
          args: install beta
          use-cross: ${{ matrix.arch != 'x86_64' }}
      - name: Show installation and setup environment
        shell: bash
        run: |
          ls -l "$(cargo run dir library)"
          ls -l "$(cargo run dir resource)"
          echo "MAA_CORE_DIR=$(cargo run dir library)" >> $GITHUB_ENV
          echo "DYLD_FALLBACK_LIBRARY_PATH=$(cargo run dir library)" >> $GITHUB_ENV
      - name: Test (maa-cli)
        if: matrix.arch == 'x86_64' || matrix.os == 'macos-latest'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --bin maa --locked
          use-cross: ${{ matrix.arch != 'x86_64' }}
      - name: Try run
        if: matrix.arch == 'x86_64' || matrix.os == 'macos-latest'
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --bin maa --locked -- version
          use-cross: ${{ matrix.arch != 'x86_64' }}
      - name: Test (maa-sys, static)
        if: matrix.arch == 'x86_64' || matrix.os == 'macos-latest'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --package maa-sys --locked
          use-cross: ${{ matrix.arch != 'x86_64' }}
