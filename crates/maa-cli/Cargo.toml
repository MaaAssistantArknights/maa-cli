[package]
name = "maa-cli"
authors = ["Loong Wang <wangl-cc@outlook.com>"]
version = "0.5.2"
edition = "2021"
readme = "../README-EN.md"
description = "A simple CLI for MAA (MaaAssistantArknights)"
repository.workspace = true
license.workspace = true

[features]
default = ["cli_installer", "core_installer", "git2"]

# Features used to install and update MAA Core
core_installer = ["__installer"]

# Features used to install update maa-cli self
cli_installer = ["__installer"]

# Vendored openssl
vendored-openssl = ["git2?/vendored-openssl"]

# Common features used to install and update MAA Core and maa-cli self
__installer = [
  "indicatif",
  "futures-util",
  "sha2",
  "digest",
  "semver",
  "flate2",
  "tar",
  "zip",
  "reqwest/stream",
]

[[bin]]
name = "maa"
path = "src/main.rs"

[dependencies]
maa-dirs = { workspace = true }
maa-sys = { workspace = true, features = ["runtime"] }
maa-types = { workspace = true, features = ["serde"] }

anyhow = { workspace = true }
async-trait = { workspace = true }
chrono = { workspace = true, features = ["std", "clock", "serde"] }
clap = { workspace = true, features = ["derive"] }
clap_complete = { workspace = true }
clap_mangen = { workspace = true }
color-print = { workspace = true }
digest = { workspace = true, optional = true }
dunce = { workspace = true }
env_logger = { workspace = true, features = ["auto-color"] }
flate2 = { workspace = true, optional = true }
futures-util = { workspace = true, optional = true }
git2 = { workspace = true, optional = true }
indicatif = { workspace = true, optional = true }
log = { workspace = true }
prettytable = { workspace = true }
reqwest = { workspace = true, features = ["blocking", "json"] }
semver = { workspace = true, optional = true, features = ["serde"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
serde_yaml = { workspace = true }
sha2 = { workspace = true, optional = true }
signal-hook = { workspace = true }
tar = { workspace = true, optional = true }
tokio = { workspace = true, features = ["rt", "rt-multi-thread"] }
toml = { workspace = true }
zip = { workspace = true, optional = true, features = ["deflate"] }

# Windows specific dependencies
[target.'cfg(windows)'.dependencies]
windows-result = { workspace = true }
windows-strings = { workspace = true }
windows-sys = { workspace = true, features = ["Win32_System_LibraryLoader"] }

[dev-dependencies]
regex = { workspace = true }
serde_test = { workspace = true }
